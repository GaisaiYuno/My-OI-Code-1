#include<cstdio>
#include<iostream>
#include<cstdlib>
#include<map>
#include<algorithm>
#include<math.h>
#include<string.h>
using namespace std;
int m,n,mapp[104][104],costt[104][104],x,y;
void hello(int x,int y)
{
	if(mapp[x][y]==-1)
	{
		return;
	}
	if(mapp[x-2][y]==mapp[x][y])
	{
		if(mapp[x-1][y]==mapp[x][y])
		{
			costt[x][y]=min(costt[x][y],costt[x-2][y]);
		}
		else
		{
			costt[x][y]=min(costt[x][y],costt[x-2][y]+2);
		}
	}
	if(mapp[x-2][y]==abs(mapp[x][y]-1))
	{
		if(mapp[x-1][y]==-1)
		{
			costt[x][y]=min(costt[x][y],costt[x-2][y]+3);
		}
		else
		{
			costt[x][y]=min(costt[x][y],costt[x-2][y]+1);
		}
	}
	if(mapp[x+2][y]==mapp[x][y])
	{
		if(mapp[x+1][y]==mapp[x][y])
		{
			costt[x][y]=min(costt[x][y],costt[x+2][y]);
		}
		else
		{
			costt[x][y]=min(costt[x][y],costt[x+2][y]+2);
		}
	}
	if(mapp[x+2][y]==abs(mapp[x][y]-1))
	{
		if(mapp[x+1][y]==-1)
		{
			costt[x][y]=min(costt[x][y],costt[x+2][y]+3);
		}
		else
		{
			costt[x][y]=min(costt[x][y],costt[x+2][y]+1);
		}
	}
	if(mapp[x][y-2]==mapp[x][y])
	{
		if(mapp[x][y-1]==mapp[x][y])
		{
			costt[x][y]=min(costt[x][y],costt[x][y-2]);
		}
		else
		{
			costt[x][y]=min(costt[x][y],costt[x][y-2]+2);
		}
	}
	if(mapp[x][y-2]==abs(mapp[x][y]-1))
	{
		if(mapp[x][y-1]==-1)
		{
			costt[x][y]=min(costt[x][y],costt[x][y-2]+3);
		}
		else
		{
			costt[x][y]=min(costt[x][y],costt[x][y-2]+1);
		}
	}
	if(mapp[x][y+2]==mapp[x][y])
	{
		if(mapp[x][y+1]==mapp[x][y])
		{
			costt[x][y]=min(costt[x][y],costt[x][y+2]);
		}
		else
		{
			costt[x][y]=min(costt[x][y],costt[x][y+2]+2);
		}
	}
	if(mapp[x][y+2]==abs(mapp[x][y]-1))
	{
		if(mapp[x][y+1]==-1)
		{
			costt[x][y]=min(costt[x][y],costt[x][y+2]+3);
		}
		else
		{
			costt[x][y]=min(costt[x][y],costt[x][y+2]+1);
		}
	}
	if(mapp[x+1][y+1]==mapp[x][y])
	{
		if(mapp[x+1][y]==mapp[x][y]||mapp[x][y+1]==mapp[x][y])
		{
			costt[x][y]=min(costt[x][y],costt[x+1][y+1]);
		}
		else
		{
			costt[x][y]=min(costt[x][y],costt[x+1][y+1]+2);
		}
	}
	if(mapp[x+1][y+1]==abs(mapp[x][y]-1))
	{
		if(mapp[x+1][y]!=-1||mapp[x][y+1]!=-1)
		{
			costt[x][y]=min(costt[x][y],costt[x+1][y+1]+1);
		}
		else
		{
			costt[x][y]=min(costt[x][y],costt[x+1][y+1]+3);
		}
	}//
	if(mapp[x+1][y-1]==mapp[x][y])
	{
		if(mapp[x+1][y]==mapp[x][y]||mapp[x][y-1]==mapp[x][y])
		{
			costt[x][y]=min(costt[x][y],costt[x+1][y-1]);
		}
		else
		{
			costt[x][y]=min(costt[x][y],costt[x+1][y-1]+2);
		}
	}
	if(mapp[x+1][y-1]==abs(mapp[x][y]-1))
	{
		if(mapp[x+1][y]!=-1||mapp[x][y-1]!=-1)
		{
			costt[x][y]=min(costt[x][y],costt[x+1][y-1]+1);
		}
		else
		{
			costt[x][y]=min(costt[x][y],costt[x+1][y-1]+3);
		}
	}//
	if(mapp[x-1][y+1]==mapp[x][y])
	{
		if(mapp[x-1][y]==mapp[x][y]||mapp[x][y+1]==mapp[x][y])
		{
			costt[x][y]=min(costt[x][y],costt[x-1][y+1]);
		}
		else
		{
			costt[x][y]=min(costt[x][y],costt[x-1][y+1]+2);
		}
	}
	if(mapp[x-1][y+1]==abs(mapp[x][y]-1))
	{
		if(mapp[x-1][y]!=-1||mapp[x][y+1]!=-1)
		{
			costt[x][y]=min(costt[x][y],costt[x-1][y+1]+1);
		}
		else
		{
			costt[x][y]=min(costt[x][y],costt[x-1][y+1]+3);
		}
	}//
	if(mapp[x-1][y-1]==mapp[x][y])
	{
		if(mapp[x-1][y]==mapp[x][y]||mapp[x][y-1]==mapp[x][y])
		{
			costt[x][y]=min(costt[x][y],costt[x-1][y-1]);
		}
		else
		{
			costt[x][y]=min(costt[x][y],costt[x-1][y-1]+2);
		}
	}
	if(mapp[x-1][y-1]==abs(mapp[x][y]-1))
	{
		if(mapp[x-1][y]!=-1||mapp[x][y-1]!=-1)
		{
			costt[x][y]=min(costt[x][y],costt[x-1][y-1]+1);
		}
		else
		{
			costt[x][y]=min(costt[x][y],costt[x-1][y-1]+3);
		}
	}
	if(mapp[x+1][y]==mapp[x][y])
	{
		costt[x][y]=min(costt[x][y],costt[x+1][y]);
	}
	if(mapp[x+1][y]==abs(mapp[x][y]-1))
	{
		costt[x][y]=min(costt[x][y],costt[x+1][y]+1);
	}
	if(mapp[x-1][y]==mapp[x][y])
	{
		costt[x][y]=min(costt[x][y],costt[x-1][y]);
	}
	if(mapp[x-1][y]==abs(mapp[x][y]-1))
	{
		costt[x][y]=min(costt[x][y],costt[x-1][y]+1);
	}
	if(mapp[x][y+1]==mapp[x][y])
	{
		costt[x][y]=min(costt[x][y],costt[x][y+1]);
	}
	if(mapp[x][y+1]==abs(mapp[x][y]-1))
	{
		costt[x][y]=min(costt[x][y],costt[x][y+1]+1);
	}
	if(mapp[x][y-1]==mapp[x][y])
	{
		costt[x][y]=min(costt[x][y],costt[x][y-1]);
	}
	if(mapp[x][y-1]==abs(mapp[x][y]-1))
	{
		costt[x][y]=min(costt[x][y],costt[x][y-1]+1);
	}//
	if(mapp[x-2][y]==mapp[x][y])
	{
		if(mapp[x-1][y]==mapp[x][y])
		{
			if(costt[x][y]<costt[x-2][y])
			{
				hello(x-2,y);
			}
		}
		else
		{
			if(costt[x][y]+2<costt[x-2][y])
			{
				hello(x-2,y);
			}
		}
	}
	if(mapp[x-2][y]==abs(mapp[x][y]-1))
	{
		if(mapp[x-1][y]==-1)
		{
			if(costt[x][y]+3<costt[x-2][y])
			{
				hello(x-2,y);
			}
		}
		else
		{
			if(costt[x][y]+1<costt[x-2][y])
			{
				hello(x-2,y);
			}
		}
	}//
	if(mapp[x][y-2]==mapp[x][y])
	{
		if(mapp[x][y-1]==mapp[x][y])
		{
			if(costt[x][y]<costt[x][y-2])
			{
				hello(x,y-2);
			}
		}
		else
		{
			if(costt[x][y]+2<costt[x][y-2])
			{
				hello(x,y-2);
			}
		}
	}
	if(mapp[x][y-2]==abs(mapp[x][y]-1))
	{
		if(mapp[x][y-1]==-1)
		{
			if(costt[x][y]+3<costt[x][y-2])
			{
				hello(x,y-2);
			}
		}
		else
		{
			if(costt[x][y]+1<costt[x][y-2])
			{
				hello(x,y-2);
			}
		}
	}//
	if(mapp[x+2][y]==mapp[x][y])
	{
		if(mapp[x+1][y]==mapp[x][y])
		{
			if(costt[x][y]<costt[x+2][y])
			{
				hello(x+2,y);
			}
		}
		else
		{
			if(costt[x][y]+2<costt[x+2][y])
			{
				hello(x+2,y);
			}
		}
	}
	if(mapp[x+2][y]==abs(mapp[x][y]-1))
	{
		if(mapp[x+1][y]==-1)
		{
			if(costt[x][y]+3<costt[x+2][y])
			{
				hello(x+2,y);
			}
		}
		else
		{
			if(costt[x][y]+1<costt[x+2][y])
			{
				hello(x+2,y);
			}
		}
	}
	if(mapp[x][y+2]==mapp[x][y])
	{
		if(mapp[x][y+1]==mapp[x][y])
		{
			if(costt[x][y]<costt[x][y+2])
			{
				hello(x,y+2);
			}
		}
		else
		{
			if(costt[x][y]+2<costt[x][y+2])
			{
				hello(x,y+2);
			}
		}
	}
	if(mapp[x][y+2]==abs(mapp[x][y]-1))
	{
		if(mapp[x][y+1]==-1)
		{
			if(costt[x][y]+3<costt[x][y+2])
			{
				hello(x,y+2);
			}
		}
		else
		{
			if(costt[x][y]+1<costt[x+2][y])
			{
				hello(x,y+2);
			}
		}
	}
	if(mapp[x+1][y+1]==mapp[x][y])
	{
		if(mapp[x+1][y]==mapp[x][y]||mapp[x][y+1]==mapp[x][y])
		{
			if(costt[x][y]<costt[x+1][y+1])
			{
				hello(x+1,y+1);
			}
		}
		else
		{
			if(costt[x][y]+2<costt[x+1][y+1])
			{
				hello(x+1,y+1);
			}
		}
	}
	if(mapp[x+1][y+1]==abs(mapp[x][y]-1))
	{
		if(mapp[x+1][y]!=-1||mapp[x][y+1]!=-1)
		{
			if(costt[x][y]+1<costt[x+1][y+1])
			{
				hello(x+1,y+1);
			}
		}
		else
		{
			if(costt[x][y]+3<costt[x+1][y+1])
			{
				hello(x+1,y+1);
			}
		}
	}//
	if(mapp[x+1][y-1]==mapp[x][y])
	{
		if(mapp[x+1][y]==mapp[x][y]||mapp[x][y-1]==mapp[x][y])
		{
			if(costt[x][y]<costt[x+1][y-1])
			{
				hello(x+1,y-1);
			}
		}
		else
		{
			if(costt[x][y]+2<costt[x+1][y-1])
			{
				hello(x+1,y-1);
			}
		}
	}
	if(mapp[x+1][y-1]==abs(mapp[x][y]-1))
	{
		if(mapp[x+1][y]!=-1||mapp[x][y-1]!=-1)
		{
			if(costt[x][y]+1<costt[x+1][y-1])
			{
				hello(x+1,y-1);
			}
		}
		else
		{
			if(costt[x][y]+3<costt[x+1][y-1])
			{
				hello(x+1,y-1);
			}
		}
	}//
	if(mapp[x-1][y+1]==mapp[x][y])
	{
		if(mapp[x-1][y]==mapp[x][y]||mapp[x][y+1]==mapp[x][y])
		{
			if(costt[x][y]<costt[x-1][y+1])
			{
				hello(x-1,y+1);
			}
		}
		else
		{
			if(costt[x][y]+2<costt[x-1][y+1])
			{
				hello(x-1,y+1);
			}
		}
	}
	if(mapp[x-1][y+1]==abs(mapp[x][y]-1))
	{
		if(mapp[x-1][y]!=-1||mapp[x][y+1]!=-1)
		{
			if(costt[x][y]+1<costt[x-1][y+1])
			{
				hello(x-1,y+1);
			}
		}
		else
		{
			if(costt[x][y]+3<costt[x-1][y+1])
			{
				hello(x-1,y+1);
			}
		}
	}//
	if(mapp[x-1][y-1]==mapp[x][y])
	{
		if(mapp[x-1][y]==mapp[x][y]||mapp[x][y-1]==mapp[x][y])
		{
			if(costt[x][y]<costt[x-1][y-1])
			{
				hello(x-1,y-1);
			}
		}
		else
		{
			if(costt[x][y]+2<costt[x-1][y-1])
			{
				hello(x-1,y-1);
			}
		}
	}
	if(mapp[x-1][y-1]==abs(mapp[x][y]-1))
	{
		if(mapp[x-1][y]!=-1||mapp[x][y-1]!=-1)
		{
			if(costt[x][y]+1<costt[x-1][y-1])
			{
				hello(x-1,y-1);
			}
		}
		else
		{
			if(costt[x][y]+3<costt[x-1][y-1])
			{
				hello(x-1,y-1);
			}
		}
	}
	//
	
	if(mapp[x+1][y]==mapp[x][y])
	{
		if(costt[x][y]<costt[x+1][y])
		{
			hello(x+1,y);
		}
	}
	if(mapp[x+1][y]==abs(mapp[x][y]-1))
	{
		if(costt[x][y]+1<costt[x+1][y])
		{
			hello(x+1,y);
		}
	}
	if(mapp[x-1][y]==mapp[x][y])
	{
		if(costt[x][y]<costt[x-1][y])
		{
			hello(x-1,y);
		}
	}
	if(mapp[x-1][y]==abs(mapp[x][y]-1))
	{
		if(costt[x][y]+1<costt[x-1][y])
		{
			hello(x-1,y);
		}
	}
	if(mapp[x][y+1]==mapp[x][y])
	{
		if(costt[x][y]<costt[x][y+1])
		{
			hello(x,y+1);
		}
	}
	if(mapp[x][y+1]==abs(mapp[x][y]-1))
	{
		if(costt[x][y]+1<costt[x][y+1])
		{
			hello(x,y+1);
		}
	}
	if(mapp[x][y-1]==mapp[x][y])
	{
		if(costt[x][y]<costt[x][y-1])
		{
			hello(x,y-1);
		}
	}
	if(mapp[x][y-1]==abs(mapp[x][y]-1))
	{
		if(costt[x][y]+1<costt[x][y-1])
		{
			hello(x,y-1);
		}
	}
}
int main()
{
	freopen("chess.in","r",stdin);
	freopen("chess.out","w",stdout);
	cin>>m>>n;
	memset(mapp,-1,sizeof(mapp));
	memset(costt,10000,sizeof(costt));
	costt[2][2]=0;
	costt[m+1][m+1]=100000;
	for(int i=1;i<=n;++i)
	{
		cin>>x>>y;
		cin>>mapp[x+1][y+1];
	}
	hello(2,2);
	if(costt[m+1][m+1]==100000)
	{
		cout<<"-1"<<endl;
		fclose(stdin);
		fclose(stdout);
		return 0;
	}
	cout<<costt[m+1][m+1]<<endl;
	fclose(stdin);
	fclose(stdout);
	return 0;
}
