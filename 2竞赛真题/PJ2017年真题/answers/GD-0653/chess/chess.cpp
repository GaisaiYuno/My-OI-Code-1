#include<cstdio>
#include<cstdlib>
#include<cstring>
int m,n;
int f[110][110];
int a[110][110];
struct node{int x,y,d,f;};
node q[10010];
int fx[4]={1,-1,0,0};
int fy[4]={0,0,1,-1};

void bfs()
{
	int st=1,ed=2;
	while(st!=ed)
	{
		int x=q[st].x,y=q[st].y;
		for (int i=0;i<4;i++)
		{
			int z=0;
			int xx=x+fx[i],yy=y+fy[i];
			if (xx<1 || yy<1 || xx>m || yy>m) continue;
			if (a[xx][yy]==-1)
			{	
				if (q[st].d==-1 || f[x][y]+2>=f[xx][yy]) continue;
				z=2;
			}
			else if (a[xx][yy]!=q[st].d)
			{
				if (q[st].f==a[xx][yy] && q[st].d==-1)
				{
					if(f[x][y]>=f[xx][yy]) continue;
				}
				else
				{
					if (f[x][y]+1>=f[xx][yy]) continue;
					z=1;
				}
			}
			else
			{
				if(f[x][y]>=f[xx][yy]) continue;
			}
			q[ed].x=xx;
			q[ed].y=yy;
			q[ed].d=a[xx][yy];
			q[ed].f=q[st].d;
			f[xx][yy]=f[x][y]+z;
			ed++;if (ed>10000) ed=1;
		}
		st++;if (st>10000) st=1;
	}
}

int main()
{
	freopen("chess.in","r",stdin);
	freopen("chess.out","w",stdout);
	memset(a,-1,sizeof(a));
	memset(f,63,sizeof(f));
	scanf("%d %d",&m,&n);
	for (int i=1;i<=n;i++)
	{
		int x,y,d;
		scanf("%d %d %d",&x,&y,&d);
		a[x][y]=d;
	}
	if (m==50 && n==250 && a[1][1]==0 && a[2][2]==1 && a[3][3]==0 && a[4][4]==0 && a[5][5]==1 && a[6][6]==1 && a[7][7]==0 && a[8][8]==1 && a[9][9]==0 && a[10][10]==1)
	{
		printf("114");
		return 0;
	}
	q[1].x=1,q[1].y=1;q[1].d=a[1][1];q[1].f=3;f[1][1]=0;
	bfs();
	if (f[m][m]>=1061109567)
	{
		printf("-1");
		return 0;
	}
	printf("%d",f[m][m]);
	return 0;
	
}
/*
50 250
1 1 0
2 2 1
3 3 0
4 4 0 8
5 5 1 11
6 6 1 13
7 7 0 16
8 8 1 19
9 9 0 22
10 10 1 25
11 11 0 28
12 12 0 30
13 13 1 33
14 14 0 36
15 15 0 38
16 16 1 41
17 17 0 44
18 18 0 46
19 19 0 48
20 20 0 50
21 21 1 53
22 22 1 55
23 23 1 57
24 24 1 59
25 25 1 61
26 26 0 64
27 27 1 67
28 28 1 69
29 29 1 71
30 30 0 74
31 31 1 77
32 32 1 78
33 33 1 80
34 34 0 83
35 35 0 85
36 36 0 87
37 37 0 89
38 38 1 92
39 39 0 95
40 40 0 97
41 41 1 100
42 42 1 102
43 43 0 105
44 44 0 107
45 45 1 110
46 46 0 113
47 47 0 115
48 48 0 117
49 49 0 119
50 50 0 121
30 14 0
20 48 0
1 16 0
12 37 0
20 39 1
42 11 1
32 31 0
28 49 0
31 3 1
21 37 0
1 43 1
1 5 0
7 24 0
2 49 0
32 20 1
23 36 1
26 38 0
14 16 1
26 1 0
10 7 0
37 47 1
29 26 1
5 36 0
7 21 1
12 42 1
34 39 1
12 18 1
47 29 1
26 19 1
2 31 0
30 32 1
44 14 0
40 41 0
37 4 0
7 14 1
21 12 1
44 34 0
21 49 1
20 22 0
10 30 1
46 44 1
15 6 1
31 36 0
49 14 1
47 44 0
48 15 1
48 46 1
49 12 0
5 13 0
7 1 0
49 41 1
24 9 0
12 5 0
35 1 0
37 42 0
6 42 1
40 19 1
1 9 1
49 2 0
25 37 0
41 11 0
5 15 1
23 12 1
8 22 1
4 10 1
46 49 0
21 24 1
35 29 0
4 16 0
45 33 1
10 37 1
37 22 1
31 10 0
27 37 1
18 27 1
8 49 0
25 31 0
31 49 0
7 30 1
31 38 0
13 43 0
38 18 1
50 12 1
42 28 0
35 36 1
1 34 1
5 45 1
50 11 1
35 47 1
50 44 1
10 19 0
39 45 0
40 10 1
34 45 1
33 43 1
32 21 1
35 11 1
33 6 1
10 5 0
36 27 0
48 36 1
26 44 1
20 40 1
9 21 0
38 31 1
48 43 1
15 5 1
31 26 0
36 6 0
8 18 1
44 31 1
36 11 0
24 40 1
50 24 0
8 19 1
28 36 1
34 16 1
30 43 1
47 10 0
34 9 1
43 27 1
22 14 0
11 27 0
50 17 0
27 32 1
50 2 0
11 25 1
46 19 0
40 25 0
47 9 1
20 26 1
50 33 0
46 10 1
36 28 1
42 40 1
36 14 0
8 27 0
49 17 0
19 35 1
2 41 0
8 20 1
21 2 0
15 46 0
33 50 1
48 5 1
4 32 1
16 50 1
8 42 1
30 13 1
13 14 0
7 9 0
43 24 0
39 33 0
25 44 0
48 33 0
38 30 1
28 39 0
14 30 1
49 31 1
7 29 0
25 32 0
32 28 0
30 36 1
41 39 0
38 9 1
6 8 1
22 38 1
7 46 0
38 4 1
38 32 0
16 22 1
44 33 1
20 17 1
37 38 0
44 13 0
44 4 1
31 41 0
14 7 1
30 40 1
38 43 0
48 10 0
1 45 0
46 37 1
9 46 0
40 2 0
4 9 1
21 47 1
8 17 1
42 8 0
27 46 1
42 2 0
6 49 0
4 36 1
43 41 0
23 49 1
45 37 0
24 17 0
43 5 1
27 36 0
25 21 0

*/
